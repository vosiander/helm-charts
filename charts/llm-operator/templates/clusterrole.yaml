apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "helm.fullname" . }}-cluster
  labels:
    {{- include "helm.labels" . | nindent 4 }}
rules:
  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [kopf.dev]
    resources: [clusterkopfpeerings]
    verbs: [list, watch, patch, get]

  # Framework: runtime observation of namespaces & CRDs (addition/deletion).
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [list, watch, get, create, update, patch, delete]
  - apiGroups: [""]
    resources: [namespaces]
    verbs: [list, watch, get]

  # Framework: posting the events about the handlers progress/errors.
  - apiGroups: [""]
    resources: [events]
    verbs: [create, get, list, watch]

  # Application: Custom resources managed by this operator
  - apiGroups: [ops.veitosiander.de]
    resources:
      - litellmkeys
      - litellmmodels
      - ollamamodels
      - n8napikeys
      - n8nadminusers
      - openwebuibanners
      - openwebuichannels
      - openwebuigroups
      - openwebuiprompts
      - openwebuitoolservers
    verbs: [list, watch, get, create, update, patch, delete]

  # Application: Secrets management for n8n_api_key operator
  # This operator creates Kubernetes secrets containing N8N API keys
  - apiGroups: [""]
    resources: [secrets]
    verbs: [get, list, watch, create, update, patch, delete]
